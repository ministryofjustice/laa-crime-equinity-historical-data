# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Unit-Tests on pushed branch

on:
  push:
    branches-ignore: [main]
env:
  JAVA_VERSION: 17
  JAVA_DIST: temurin


permissions:
  contents: read
  packages: write

jobs:
  capture-repo-info:
    uses: ./.github/workflows/capture-repo-info.yml

  build:
    runs-on: ubuntu-latest
    needs:
      - capture-repo-info
    env:
      WORKING_DIRECTORY: ${{ needs.capture-repo-info.outputs.working_directory }}

    steps:
      - uses: actions/checkout@v4
      - uses: ${{ needs.capture-repo-info.outputs.working_directory }}/.github/actions/build-app-gradle@main
        with:
          java-version: ${{env.JAVA_VERSION}}
          java-dist: ${{env.JAVA_DIST}}
          working-directory: ${{ needs.capture-repo-info.outputs.working_directory }}
#
#      - name: Set up JDK ${{env.JAVA_VERSION}}
#        uses: actions/setup-java@v4
#        with:
#          java-version: ${{env.JAVA_VERSION}}
#          distribution: ${{env.JAVA_DIST}}
#
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#        with:
#          build-root-directory: ${{env.WORKING_DIRECTORY}}
#
#      - name: Build and install dependencies
#        uses: gradle/gradle-build-action@v2
#        with:
#          arguments: clean build
#          build-root-directory: ${{env.WORKING_DIRECTORY}}

  test:
    runs-on: ubuntu-latest
    needs:
      - capture-repo-info
    env:
      WORKING_DIRECTORY: ${{ needs.capture-repo-info.outputs.working_directory }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{env.JAVA_VERSION}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{env.JAVA_VERSION}}
          distribution: ${{env.JAVA_DIST}}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          build-root-directory: ${{env.WORKING_DIRECTORY}}

      - name: Run Unit Tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean test
          build-root-directory: ${{env.WORKING_DIRECTORY}}

      - name: Generate Test coverage report
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jacocoTestCoverageVerification
          build-root-directory: ${{env.WORKING_DIRECTORY}}
