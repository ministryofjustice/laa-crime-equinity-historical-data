# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
name: Unit-Tests on pushed branch

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
env:
  JAVA_VERSION: 17
  JAVA_DIST: temurin

permissions:
  contents: read
  packages: write


jobs:
  capture-repo-info:
    uses: ./.github/workflows/_capture-repo-info.yml

  test:
    runs-on: ubuntu-latest
    needs:
      - capture-repo-info

    steps:
      - uses: actions/checkout@v4

      - name: Run unit tests with gradle
        uses: './.github/actions/test-app-gradle'
        with:
          java-version: ${{env.JAVA_VERSION}}
          java-dist: ${{env.JAVA_DIST}}

  snyk-app:
    runs-on: ubuntu-latest
    needs:
      - test

    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check app for vulnerabilities
        uses: snyk/actions/gradle@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: |
            --all-sub-projects
            --severity-threshold=high

  snyk-docker:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    needs:
      - test
      - capture-repo-info
    env:
      IMAGE_TAG: ${{ needs.capture-repo-info.outputs.repo_name }}-${{ github.sha }} # Tags ECR image with commit sha

    steps:
      - uses: actions/checkout@v4
      - name: Build app jar with gradle
        uses: './.github/actions/build-app-gradle'
        with:
          java-version: ${{env.JAVA_VERSION}}
          java-dist: ${{env.JAVA_DIST}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and push docker image to container repo
      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: ${{ env.IMAGE_TAG }}
          push: false

#      - name: Build a Docker image
#        run: docker build -t ${{ env.IMAGE_TAG }} .
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@14818c4695ecc4045f33c9cee9e795a788711ca4
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.IMAGE_TAG }}
          args: | 
            --file=Dockerfile 
            --severity-threshold=high 
# TODO (EMP-184): Remove this. Just for testing purpuses
  snyk-monitor:
    runs-on: ubuntu-latest
    needs:
      - test
      - capture-repo-info

    steps:
      - uses: actions/checkout@v4

      - name: Run Snyk to check app for vulnerabilities
        uses: snyk/actions/gradle@master
        continue-on-error: true # To make sure that further actions are called (e.g. SARIF upload)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: |
            --all-sub-projects
            --severity-threshold=high

      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@14818c4695ecc4045f33c9cee9e795a788711ca4
        continue-on-error: true # To make sure that further actions are called (e.g. monitor or SARIF upload)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ needs.capture-repo-info.outputs.repo_name }}-${{ github.sha }} # Tags ECR image with commit sha
        with:
          command: monitor
          image: ${{ env.REGISTRY }}/${{ vars.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          args: |
            --file=Dockerfile 
            --severity-threshold=high 
