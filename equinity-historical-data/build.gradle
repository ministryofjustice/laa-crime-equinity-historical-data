plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'jacoco'
}

def versions = [
	springdocVersion       		: '1.7.0',
	springStarterValidation		: '3.2.2'
]

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation project(':data-api')

	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//Enable Swagger UI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation "org.springframework.boot:spring-boot-starter-validation:$versions.springStarterValidation"
	// Annotations
	implementation "org.springdoc:springdoc-openapi-ui:$versions.springdocVersion"
	implementation 'com.microsoft.sqlserver:mssql-jdbc'
	implementation 'org.json:json:20231013'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// If using JUnit Jupiter
	testImplementation("org.junit.jupiter:junit-jupiter:5.9.2")
	testRuntimeOnly("org.junit.platform:junit-platform-launcher")

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation "com.h2database:h2"
}

jar {
	manifest {
		attributes(
			'Main-Class': 'uk.gov.justice.laa.crime.equinity.historicaldata.EquinityHistoricalDataApplication'
		)
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.8"
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'**/entity/**',
					'**/dto/**',
					'**/generated/**',
					'**/config/**'
			])
		}))
	}
}
